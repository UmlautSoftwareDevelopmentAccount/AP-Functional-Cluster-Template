---
Language: Cpp
# shall work in clang-format-10, but does not...
#Standard: Cpp20
ColumnLimit: 80
UseTab: Never
IndentWidth: 4
TabWidth: 4
# allows greping of log messages
BreakStringLiterals: false
# https://www.python.org/dev/peps/pep-0350/
CommentPragmas:  '^ (NOTE|TODO|FIXME|XXX|BUG):'
# NamespaceMacros: ['', '']
# BasedOnStyle: ''
IncludeCategories:
  - Regex:           '.*'
    Priority:        5
# C-headers
  - Regex:           '^(<(c)/)'
    Priority:        4
  - Regex:           '^(<|"(gtest|json)/)'
    Priority:        3
  - Regex:           '^(<|"(boost)/)'
    Priority:        2
# FIXME: more?
  - Regex:           '^(<|"(ara)/)'
    Priority:        1
AccessModifierOffset: -3
AlignAfterOpenBracket: Align
AlignConsecutiveAssignments: true
AlignConsecutiveDeclarations: true
AlignConsecutiveMacros: true
AlignEscapedNewlines: Right
# shall work in clang-format-10, but does not...
#AlignOperands: AlignAfterOperator
#AlignConsecutiveBitFields: true
#IndentCaseBlocks: true
#IndentExternBlock: NoIndent
#AllowShortEnumsOnASingleLine: true
AlignTrailingComments: true
AllowShortBlocksOnASingleLine: Empty
AllowShortCaseLabelsOnASingleLine: false
AllowShortFunctionsOnASingleLine: Inline
AllowShortIfStatementsOnASingleLine: false
AllowShortLambdasOnASingleLine: Inline
AllowShortLoopsOnASingleLine: true
AlwaysBreakAfterDefinitionReturnType: None
AlwaysBreakAfterReturnType: None
PenaltyReturnTypeOnItsOwnLine: 5
AlwaysBreakBeforeMultilineStrings: true
AlwaysBreakTemplateDeclarations: No
PenaltyBreakTemplateDeclaration: 5
AllowAllConstructorInitializersOnNextLine: true
ConstructorInitializerAllOnOneLineOrOnePerLine: true
AllowAllArgumentsOnNextLine: false
BinPackArguments: false
AllowAllParametersOfDeclarationOnNextLine: false
BinPackParameters: false
BreakBeforeBraces: Custom
BraceWrapping:
  AfterCaseLabel:  false
  AfterClass:      true
  AfterControlStatement: Always
  AfterEnum:       false
  AfterExternBlock: false
  AfterFunction:   true
  AfterNamespace:  false
  AfterStruct:     true
  AfterUnion:      false
  BeforeCatch:     true
  BeforeElse:      true
# shall work in clang-format-10, but does not...
#  BeforeLambdaBody: false
#  BeforeWhile:     false
  IndentBraces:    false
  SplitEmptyFunction:  false
  SplitEmptyNamespace: false
  SplitEmptyRecord:    false
BreakBeforeBinaryOperators: NonAssignment
BreakBeforeTernaryOperators: true
BreakConstructorInitializers: BeforeComma
BreakInheritanceList: BeforeComma
CompactNamespaces: true
ConstructorInitializerIndentWidth: 2
ContinuationIndentWidth: 2
Cpp11BracedListStyle: true
DeriveLineEnding: false
UseCRLF: false
DerivePointerAlignment: false
PointerAlignment: Left
ExperimentalAutoDetectBinPacking: false
FixNamespaceComments: true
ForEachMacros:   [ foreach, Q_FOREACH, BOOST_FOREACH ]
IncludeBlocks: Preserve
IncludeIsMainRegex: '$'
# if given aaa.cpp has definition in aaaImpl.hpp
#IncludeIsMainSourceRegex: '(Impl\.hpp)$'
IndentCaseLabels: false
IndentGotoLabels: false
IndentPPDirectives: AfterHash
IndentWrappedFunctionNames: false
KeepEmptyLinesAtTheStartOfBlocks: true
MacroBlockBegin: ''
MacroBlockEnd:   ''
MaxEmptyLinesToKeep: 2
NamespaceIndentation: None
PenaltyBreakAssignment: 5
PenaltyBreakBeforeFirstCallParameter: 10000
PenaltyBreakComment: 300
PenaltyBreakFirstLessLess: 10
PenaltyBreakString: 1000
PenaltyExcessCharacter: 100
# FIXME: usage of this?
RawStringFormats:
  - Language: Cpp
  - Delimiters:
    - 'cc'
    - 'cpp'
  - BasedOnStyle: Allman
  - CanonicalDelimiter: 'cc'
ReflowComments: true
SortIncludes: true
SortUsingDeclarations: true
SpaceAfterCStyleCast: true
SpaceAfterLogicalNot: true
SpaceAfterTemplateKeyword: false
SpaceBeforeAssignmentOperators: true
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeParens: ControlStatements
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeSquareBrackets: false
SpaceInEmptyBlock: false
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 2
SpacesInAngles: false
SpacesInCStyleCastParentheses: false
SpacesInConditionalStatement: false
SpacesInContainerLiterals: false
SpacesInParentheses: false
SpacesInSquareBrackets: false
StatementMacros: []
TypenameMacros: []
DisableFormat: false
...
